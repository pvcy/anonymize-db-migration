name: Anonymize production data to staging database
on:
  schedule: 
    - cron: '0 0 * * *'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: database-migration-anonymized
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Build and Push Docker Image
      run: |
        cd ./db
        docker build -t destination-db .
        gcloud auth configure-docker
        docker tag destination-db:latest gcr.io/database-migration-anonymized/destination-db
        docker push gcr.io/database-migration-anonymized/destination-db

    - name: Deploy to CloudRun
      run: |
        gcloud run deploy my-pg-service --image=gcr.io/database-migration-anonymized/destination-db --platform managed --allow-unauthenticated
  # anonymize:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Anonymize Data
  #       uses: pvcy/anonymize-project@latest
  #       with:
  #         project-id: 4e1213f4-my-project-uuid-0242ac120002
  #         db-host: my_postgres_host.host.com
  #         db-port: 5432
  #         db-username: postgres_username
  #         db-password: postgres_password
  #         client-id: ClientIDFromYourPDAccount
  #         client-secret: ClientSecretFromYourPDAccount
  # dump-database:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Dump database to blob storage
  #     run: |
  #       some bash command to call pgdump
